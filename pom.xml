<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.payneteasy</groupId>
    <artifactId>srvlog</artifactId>
    <version>srvlog-1.2-36-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>srvlog ${project.version}</name>

    <description>Lightweight logs collector system</description>

    <modules>
        <module>srvlog-service</module>
        <module>srvlog-web</module>
        <module>srvlog-it</module>
        <module>srvlog-sql</module>
    </modules>

    <repositories>
        <repository>
            <id>spring.test-mvc</id>
            <url>http://repo.springsource.org/libs-milestone</url>
        </repository>

        <repository>
            <id>mpos-pne</id>
            <url>https://mpos.pne.io/maven2</url>
        </repository>

        <repository>
            <id>pne</id>
            <name>payneteasy repo</name>
            <url>https://maven.pne.io</url>
        </repository>
    </repositories>

    <scm>
        <connection>scm:git:https://github.com/payneteasy/srvlog.git</connection>
        <developerConnection>scm:git:git@github.com:payneteasy/srvlog.git</developerConnection>
        <url>https://github.com/payneteasy/srvlog</url>
        <tag>srvlog-1.2-28</tag>
    </scm>

    <distributionManagement>
       <repository>
         <id>github-payneteasy</id>
         <name>GitHub Payneteay Apache Maven Packages</name>
         <url>https://maven.pkg.github.com/payneteasy/srvlog</url>
       </repository>
    </distributionManagement>

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.jdk.version>17</project.jdk.version>

        <maven.compiler.plugin.version>3.12.1</maven.compiler.plugin.version>
        <maven.shade.plugin.version>3.5.1</maven.shade.plugin.version>
        <maven.war.plugin.version>3.4.0</maven.war.plugin.version>
        <maven.jar.plugin.version>3.3.0</maven.jar.plugin.version>
        <maven.flyway.plugin.version>10.4.1</maven.flyway.plugin.version>
        <maven.surefire.plugin.version>3.2.3</maven.surefire.plugin.version>

        <wicket.version>10.1.0</wicket.version>
        <jetty.version>11.0.19</jetty.version>
        <slf4j.version>2.0.9</slf4j.version>
        <apache.log4j.version>2.22.0</apache.log4j.version>
        <spring.security.version>6.2.1</spring.security.version>
        <org.springframework.version>6.1.2</org.springframework.version>
        <sphinx.api.version>3.6.1</sphinx.api.version>
        <jdbc-proc.version>1.1-35</jdbc-proc.version>
        <mariadb.client.version>3.3.2</mariadb.client.version>
        <org.flywaydb.version>10.4.1</org.flywaydb.version>
        <tomcat.version>11.0.0-M15</tomcat.version>
        <jacoco.basedir>${project.basedir}/../target/coverage</jacoco.basedir>
        <jackson.version>2.16.1</jackson.version>
        <jackson-core.version>2.16.1</jackson-core.version>
        <guava.version>33.0.0-jre</guava.version>
        <selenium.version>4.16.1</selenium.version>
        <jacoco.version>0.8.11</jacoco.version>

        <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml,../target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.java.binaries>target</sonar.java.binaries>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!--Justification: Application services for project modules-->
                <groupId>com.payneteasy.srvlog</groupId>
                <artifactId>srvlog-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Application database services for project modules-->
                <groupId>com.payneteasy.srvlog</groupId>
                <artifactId>srvlog-sql</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Application web services for project modules-->
                <groupId>com.payneteasy.srvlog</groupId>
                <artifactId>srvlog-web</artifactId>
                <type>war</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Application web services for project modules-->
                <groupId>com.payneteasy.srvlog</groupId>
                <artifactId>srvlog-web</artifactId>
                <version>${project.version}</version>
                <classifier>classes</classifier>
            </dependency>
            <dependency>
                <!--Justification: Application integration tests for project modules-->
                <groupId>com.payneteasy.srvlog</groupId>
                <artifactId>srvlog-it</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Http server for http services-->
                <groupId>com.payneteasy.http-server</groupId>
                <artifactId>http-server-impl</artifactId>
                <version>1.0-4</version>
            </dependency>
            <dependency>
                <!--Justification: Application configuration via environment variables-->
                <groupId>com.payneteasy</groupId>
                <artifactId>startup-parameters</artifactId>
                <version>1.0-10</version>
            </dependency>

            <dependency>
                <!--Justification: Render html for UI-->
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-core</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Integration between wicket and spring IOC-->
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-spring</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Additional UI components for wicket framework-->
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-extensions</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Wicket utils for date and time-->
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-datetime</artifactId>
                <version>8.0.0-M7</version>
            </dependency>
            <dependency>
                <!--Justification: For UI components unit tests-->
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-tester</artifactId>
                <version>${wicket.version}</version>
            </dependency>

            <dependency>
                <!--Justification: utils for application server-->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: utils for application server debug-->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-jmx</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: JNDI support for jetty application server-->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-plus</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: JNDI support for jetty application server-->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-jndi</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Jetty web application support-->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Servlet support for jetty application server-->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Websocket api for terminal page-->
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-jetty-api</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Websocket server for terminal page-->
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <!--Justification: api for search purposes-->
                <groupId>org.sphx.api</groupId>
                <artifactId>sphinx-api</artifactId>
                <version>${sphinx.api.version}</version>
            </dependency>

            <dependency>
                <!--Justification: api for application logging-->
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Jakarta/Apache commons logging 1.2 implemented over SLF4J-->
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Jul-to-slf4j includes a java.util.logging (jul) handler, namely SLF4JBridgeHandler, which routes all incoming jul records to the SLF4j API.-->
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <!--Justification: logback api for application logging-->
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.4.14</version>
            </dependency>
            <dependency>
                <!--Justification: extensions for application logging-->
                <groupId>com.payneteasy.logging-extensions</groupId>
                <artifactId>logging-extensions</artifactId>
                <version>1.0-4</version>
            </dependency>
            <dependency>
                <!--Justification: logback integration with spring-->
                <groupId>org.logback-extensions</groupId>
                <artifactId>logback-ext-spring</artifactId>
                <version>0.1.5</version>
            </dependency>
            <dependency>
                <!--Justification: for work with syslog protocol-->
                <groupId>com.nesscomputing</groupId>
                <artifactId>ness-syslog4j</artifactId>
                <version>0.9.47-NESS-8</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!--Justification: core classes for logging-->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${apache.log4j.version}</version>
            </dependency>
            <dependency>
                <!--Justification: log4j api for application logging-->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${apache.log4j.version}</version>
            </dependency>
            <dependency>
                <!--Justification: dependencies for wicket date and time-->
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.12.5</version>
            </dependency>
            <dependency>
                <!--Justification: core dependencies for spring - application framework-->
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <!--Justification: dependencies for spring context configuration-->
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <!--Justification: dependencies for spring db access-->
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <!--Justification: dependencies for spring web services-->
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <!--Justification: Powerful Expression Language for querying and manipulating an object graph at runtime-->
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <!--Justification: spring core module for application security-->
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-expression</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-aop</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!--Justification: spring module for application web security-->
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-web</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-expression</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!--Justification: spring module for application security configuration-->
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-aop</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!--Justification: spring module for framework based testing-->
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${org.springframework.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <!--Justification: connector for mysql database-->
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>8.2.0</version>
            </dependency>
            <dependency>
                <!--Justification: java client for database-->
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb.client.version}</version>
            </dependency>
            <dependency>
                <!--Justification: framework for work with database-->
                <artifactId>jdbc-proc-daofactory</artifactId>
                <groupId>com.googlecode.jdbc-proc.jdbc-proc</groupId>
                <version>${jdbc-proc.version}</version>
            </dependency>
            <dependency>
                <!--Justification: core classes for database migration tasks-->
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${org.flywaydb.version}</version>
            </dependency>
            <dependency>
                <!--Justification: flyway module for work with mysql-->
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-mysql</artifactId>
                <version>${org.flywaydb.version}</version>
            </dependency>

            <dependency>
                <!--Justification: useful utilities classes-->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.14.0</version>
            </dependency>
            <dependency>
                <!--Justification: wicket dependencies for json-->
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <!--Justification: dependencies for work with json-->
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.10.1</version>
            </dependency>

            <dependency>
                <!--Justification: classes for database connection pooling-->
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <!--Justification: useful classes for work with input/output-->
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.15.1</version>
            </dependency>

            <dependency>
                <!--Justification: core classes for work with json protocol-->
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <!--Justification: useful classes for work with json protocol-->
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <!--Justification: useful utility classes for Google libraries-->
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <!--Justification: netty packages for work with Suricata-->
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>4.1.104.Final</version>
            </dependency>
            <dependency>
                <!--Justification: useful classes for work with annotations-->
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
            </dependency>
            <dependency>
                <!--Justification: packages for Suricata test cases-->
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.12.2</version>
            </dependency>
            <dependency>
                <!--Justification: servlet apis for web controllers-->
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>6.0.0</version>
            </dependency>
            <dependency>
                <!--Justification: for work with regular expressions-->
                <groupId>net.sourceforge.jregex</groupId>
                <artifactId>jregex</artifactId>
                <version>1.2_01</version>
            </dependency>

            <dependency>
                <!--Justification: For running on mac m1 -->
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>5.14.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <!--Justification: For mocks in test cases-->
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>5.2.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--Justification: library for project unit tests-->
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--Justification: api library for project unit tests-->
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.10.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--Justification: library for UI testing flows-->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--Justification: api library for UI testing flows-->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-api</artifactId>
                <version>${selenium.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <profiles>
        <profile>
            <id>owasp-dependency-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>9.0.7</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${project.jdk.version}</source>
                    <target>${project.jdk.version}</target>
                    <encoding>utf-8</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <optimize>false</optimize>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>

            <!-- disable javadoc for quick release -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.3</version>
                <configuration>
                    <noindex>true</noindex>
                    <notree>true</notree>
                    <!-- <quiet>true</quiet> -->
                    <use>false</use>
                    <excludePackageNames>com.payneteasy.*</excludePackageNames>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-and-report</id>
                        <goals>
                            <goal>prepare-agent</goal>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report-aggregate</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/../target/site/jacoco-aggregate</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <!-- CircleCI build workaround -->
                    <reuseForks>true</reuseForks>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
